---
format:
  html:
    toc: FALSE
    df-print: paged
    theme: flatly
    code-fold: false
    title-block-banner: false
    title-block: false
---

```{css, echo=FALSE}
.navbar, .navbar-default {
  display: none !important;
}
body {
  padding-top: 0 !important;
}
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, include = FALSE)  # Set global defaults
library(tidyverse)
library(lubridate)
library(knitr)
library(kableExtra)

link_color <- "#0047AB"  # Royal blue
```

```{r data-processing}
# Load the most recent grants CSV
files <- list.files(here::here(), pattern = "^GMRI_Grants.csv$", full.names = TRUE)
latest_file <- sort(files, decreasing = TRUE)[1]

grants <- read_csv(latest_file)

# Create the formatted table

# Build your table data
grants_out <- grants %>%
  mutate(
    Title = paste0(
      "<a href='", AdditionalInfoURL, "' style='color:#0047AB;'>", Title, "</a>"
    ),
    Deadline = as.Date(Deadline),
    Posted = as.Date(Posted),
    IsNew = Posted >= Sys.Date() - 7,  # TRUE/FALSE
    New = if_else(IsNew, "<span style='color:green;font-size:1.2em;'>&#x25CF;</span>", ""),
    
    # Helper columns for sorting
    Posted_for_sort = if_else(IsNew, Posted, as.Date(NA)),
    Deadline_for_sort = if_else(!IsNew, Deadline, as.Date(NA))
  ) %>%
  arrange(
    desc(IsNew),
    desc(Posted_for_sort),
    Deadline_for_sort
  )

# Identify break point
break_index <- max(which(grants_out$IsNew)) + 1

# Drop sort helpers and format dates
grants_out <- grants_out %>%
  mutate(
    Deadline = format(Deadline, "%b %d, %Y"),
    Posted = format(Posted, "%b %d, %Y")
  ) %>%
  select(Agency, Title, New, Deadline, Posted)  # drop helpers

break_row <- tibble(
  Agency = "&nbsp;",
  Title = "&nbsp;",
  New = "&nbsp;",
  Deadline = "&nbsp;",
  Posted = "&nbsp;"
)

# Bind with break row inserted
grants_out <- bind_rows(
  grants_out[1:(break_index - 1), ],
  break_row,
  grants_out[break_index:nrow(grants_out), ]
)
```

```{r date-heading, include=TRUE, results="asis"}
cat("# Grants Report - ", format(Sys.Date(), "%B %d, %Y"), "\n\n")
```

```{r table-output, include=TRUE, results="asis"}
fmt <- knitr::opts_knit$get("rmarkdown.pandoc.to")
tbl_format <- ifelse(fmt == "html", "html", "latex")

kable(grants_out, format = tbl_format, escape = FALSE) %>%
  kable_styling(
    bootstrap_options = if (tbl_format == "html") "striped" else NULL,
    latex_options = if (tbl_format == "latex") c("striped", "hold_position") else NULL,
    full_width = FALSE
  ) %>%
  row_spec(break_index, background = "#e0e0e0")
```